# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Attribute {
  id: ID!
  type: Types!
  product: Product
  value: String!
  name: String!
}

"""Attribute types"""
enum Types {
  COLOR
  SIZE
}

type Category {
  id: ID!
  name: String!
  description: String!
  products: [Product!]
}

type Product {
  id: ID!
  attributes: [Attribute!]
  store: Store
  categories: [Category!]
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  description: String!
  brand: String!
  sku: String!
  price: Float!
  thumbnail: String!
  images: String!
  reviews: Float!
  quantity: Float!
  dimension: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Store {
  id: ID!
  products: [Product!]
  employees: [User!]
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  bio: String!
  rate: Float!
  slug: String!
  street: String!
  city: String!
  state: String!
  country: String!
  neighborhood: String!
  number: String!
  zipCode: String!
  sales: Float!
}

type User {
  id: ID!
  role: Roles!
  status: Status!
  store: [Store!]
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  username: String!
  email: String!
  bio: String!
  image: String!
}

"""User possible roles"""
enum Roles {
  MEMBER
  ADMIN
  SELLER
}

"""Account status"""
enum Status {
  ACTIVE
  DISABLED
}

type AuthType {
  user: User!
  token: String!
}

input AttributeInput {
  id: ID!
  type: Types!
  product: ProductInput
  value: String!
  name: String!
}

input CategoryInput {
  id: ID!
  name: String!
  description: String!
  products: [ProductInput!]
}

input ProductInput {
  id: ID!
  attributes: [AttributeInput!]
  store: StoreInput
  categories: [CategoryInput!]
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  description: String!
  brand: String!
  sku: String!
  price: Float!
  thumbnail: String!
  images: String!
  reviews: Float!
  quantity: Float!
  dimension: String!
}

input StoreInput {
  id: ID!
  products: [ProductInput!]
  employees: [UserInput!]
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  bio: String!
  rate: Float!
  slug: String!
  street: String!
  city: String!
  state: String!
  country: String!
  neighborhood: String!
  number: String!
  zipCode: String!
  sales: Float!
}

input UserInput {
  id: ID!
  role: Roles!
  status: Status!
  store: [StoreInput!]
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  username: String!
  email: String!
  bio: String!
  image: String!
}

type Query {
  findById(id: String!): User!
  findByEmail(email: String!): User!
  getAllProducts: [Product!]
  getAllAttributes: [Attribute!]
  findStoreById(id: String!): Store
  getAllStores: [Store!]
  getAllCategories: [Category!]
}

type Mutation {
  createUser(data: CreateUserDto!): User!
  login(data: AuthDto!): AuthType!
  createProduct(data: CreateProductDto!): Product!
  linkAttributeToProduct(data: LinkAttributeToProductDto!): Product
  linkCategoryToProduct(data: LinkCategoryToProductDto!): Product
  createAttribute(data: CreateAttributeDto!): Attribute!
  createStore(data: CreateStoreDto!): Store!
  linkEmployeeToStore(data: LinkEmployeeToStoreDto!): Store
  linkProductToStore(data: LinkProductToStoreDto!): Store
  createCategory(data: CreateCategoryDto!): Category!
}

input CreateUserDto {
  username: String!
  name: String!
  email: String!
  password: String!
  confirmPassword: String!
}

input AuthDto {
  email: String!
  password: String!
}

input CreateProductDto {
  title: String!
  description: String!
  brand: String!
  price: Float!
  quantity: Float!
  dimension: String!
  attributes: [AttributeInput!]
}

input LinkAttributeToProductDto {
  productId: ID!
  attributesId: [ID!]!
}

input LinkCategoryToProductDto {
  productId: ID!
  categoriesId: [ID!]!
}

input CreateAttributeDto {
  value: String!
  name: String!
  type: String!
}

input CreateStoreDto {
  name: String!
  bio: String!
  slug: String!
  street: String!
  city: String!
  state: String!
  country: String!
  neighborhood: String!
  zipCode: String!
  number: String!
  products: [ProductInput!]
  employees: [UserInput!]
}

input LinkEmployeeToStoreDto {
  storeId: String!
  employeesId: [ID!]!
}

input LinkProductToStoreDto {
  storeId: ID!
  productsId: [ID!]!
}

input CreateCategoryDto {
  name: String!
  description: String!
}
